{"version":3,"file":"index-B35keSyw.js","sources":["../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs","../../../node_modules/@tanstack/query-core/build/lib/utils.mjs","../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs","../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs","../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs","../../../node_modules/@tanstack/query-core/build/lib/logger.mjs","../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs","../../../node_modules/@tanstack/query-core/build/lib/removable.mjs","../../../node_modules/@tanstack/query-core/build/lib/query.mjs","../../../node_modules/@tanstack/query-core/build/lib/queryCache.mjs","../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs","../../../node_modules/@tanstack/query-core/build/lib/mutationCache.mjs","../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs","../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs","../../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs","../../../node_modules/@tanstack/query-core/build/lib/queriesObserver.mjs","../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs","../../../node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs","../../../node_modules/@tanstack/query-core/build/lib/hydration.mjs","../../../node_modules/@tanstack/react-query/build/lib/reactBatchedUpdates.mjs","../../../node_modules/@tanstack/react-query/build/lib/setBatchUpdatesFn.mjs","../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../../node_modules/use-sync-external-store/shim/index.js","../../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","../../../node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs","../../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","../../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","../../../node_modules/@tanstack/react-query/build/lib/utils.mjs","../../../node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","../../../node_modules/@tanstack/react-query/build/lib/suspense.mjs","../../../node_modules/@tanstack/react-query/build/lib/useQueries.mjs","../../../node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","../../../node_modules/@tanstack/react-query/build/lib/useQuery.mjs","../../../node_modules/@tanstack/react-query/build/lib/useSuspenseQuery.mjs","../../../node_modules/@tanstack/react-query/build/lib/useSuspenseQueries.mjs","../../../node_modules/@tanstack/react-query/build/lib/queryOptions.mjs","../../../node_modules/@tanstack/react-query/build/lib/Hydrate.mjs","../../../node_modules/@tanstack/react-query/build/lib/useIsFetching.mjs","../../../node_modules/@tanstack/react-query/build/lib/useIsMutating.mjs","../../../node_modules/@tanstack/react-query/build/lib/useMutation.mjs","../../../node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs"],"sourcesContent":["class Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\nexport { Subscribable };\n//# sourceMappingURL=subscribable.mjs.map\n","// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\nexport { difference, functionalUpdate, getAbortController, hashQueryKey, hashQueryKeyByOptions, isError, isPlainArray, isPlainObject, isQueryKey, isServer, isValidTimeout, matchMutation, matchQuery, noop, parseFilterArgs, parseMutationArgs, parseMutationFilterArgs, parseQueryArgs, partialDeepEqual, partialMatchKey, replaceAt, replaceData, replaceEqualDeep, scheduleMicrotask, shallowEqualObjects, sleep, timeUntilStale };\n//# sourceMappingURL=utils.mjs.map\n","import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nclass FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\nexport { FocusManager, focusManager };\n//# sourceMappingURL=focusManager.mjs.map\n","import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\nexport { OnlineManager, onlineManager };\n//# sourceMappingURL=onlineManager.mjs.map\n","import { focusManager } from './focusManager.mjs';\nimport { onlineManager } from './onlineManager.mjs';\nimport { sleep } from './utils.mjs';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== 'always' && !onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\nexport { CancelledError, canFetch, createRetryer, isCancelledError };\n//# sourceMappingURL=retryer.mjs.map\n","const defaultLogger = console;\n\nexport { defaultLogger };\n//# sourceMappingURL=logger.mjs.map\n","import { scheduleMicrotask } from './utils.mjs';\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\nexport { createNotifyManager, notifyManager };\n//# sourceMappingURL=notifyManager.mjs.map\n","import { isValidTimeout, isServer } from './utils.mjs';\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\nexport { Removable };\n//# sourceMappingURL=removable.mjs.map\n","import { replaceData, noop, timeUntilStale, getAbortController } from './utils.mjs';\nimport { defaultLogger } from './logger.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { createRetryer, isCancelledError, canFetch } from './retryer.mjs';\nimport { Removable } from './removable.mjs';\n\n// CLASS\nclass Query extends Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\"As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']\");\n      }\n    }\n\n    const abortController = getAbortController(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!isCancelledError(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = createRetryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\"Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: \" + this.queryHash);\n          }\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: canFetch(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\nexport { Query };\n//# sourceMappingURL=query.mjs.map\n","import { hashQueryKeyByOptions, parseFilterArgs, matchQuery } from './utils.mjs';\nimport { Query } from './query.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\n\n// CLASS\nclass QueryCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  find(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => matchQuery(filters, query));\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  findAll(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => matchQuery(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\nexport { QueryCache };\n//# sourceMappingURL=queryCache.mjs.map\n","import { defaultLogger } from './logger.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Removable } from './removable.mjs';\nimport { createRetryer, canFetch } from './retryer.mjs';\n\n// CLASS\nclass Mutation extends Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || defaultLogger;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nexport { Mutation, getDefaultState };\n//# sourceMappingURL=mutation.mjs.map\n","import { notifyManager } from './notifyManager.mjs';\nimport { Mutation } from './mutation.mjs';\nimport { matchMutation, noop } from './utils.mjs';\nimport { Subscribable } from './subscribable.mjs';\n\n// CLASS\nclass MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\nexport { MutationCache };\n//# sourceMappingURL=mutationCache.mjs.map\n","function infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject(\"Missing queryFn for queryKey '\" + context.options.queryHash + \"'\"));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\nexport { getNextPageParam, getPreviousPageParam, hasNextPage, hasPreviousPage, infiniteQueryBehavior };\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n","import { parseFilterArgs, parseQueryArgs, functionalUpdate, noop, hashQueryKey, partialMatchKey, hashQueryKeyByOptions } from './utils.mjs';\nimport { QueryCache } from './queryCache.mjs';\nimport { MutationCache } from './mutationCache.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { onlineManager } from './onlineManager.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior.mjs';\nimport { defaultLogger } from './logger.mjs';\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.logger = config.logger || defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if (process.env.NODE_ENV !== 'production' && config.logger) {\n      this.logger.error(\"Passing a custom logger has been deprecated and will be removed in the next major version.\");\n    }\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  isFetching(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  /**\n   * @deprecated This method will accept only queryKey in the next major version.\n   */\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = functionalUpdate(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey,\n  /**\n   * @deprecated This filters will be removed in the next major version.\n   */\n  filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  removeQueries(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    const queryCache = this.queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    return notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => partialMatchKey(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter(x => partialMatchKey(queryKey, x.queryKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several query defaults match with key '\" + JSON.stringify(queryKey) + \"'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => partialMatchKey(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter(x => partialMatchKey(mutationKey, x.mutationKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several mutation defaults match with key '\" + JSON.stringify(mutationKey) + \"'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\nexport { QueryClient };\n//# sourceMappingURL=queryClient.mjs.map\n","import { shallowEqualObjects, noop, isServer, isValidTimeout, timeUntilStale, replaceData } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { canFetch, isCancelledError } from './retryer.mjs';\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (process.env.NODE_ENV !== 'production' && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\nexport { QueryObserver };\n//# sourceMappingURL=queryObserver.mjs.map\n","import { difference, replaceAt } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { QueryObserver } from './queryObserver.mjs';\nimport { Subscribable } from './subscribable.mjs';\n\nclass QueriesObserver extends Subscribable {\n  constructor(client, queries) {\n    super();\n    this.client = client;\n    this.queries = [];\n    this.result = [];\n    this.observers = [];\n    this.observersMap = {};\n\n    if (queries) {\n      this.setQueries(queries);\n    }\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.observers.forEach(observer => {\n        observer.subscribe(result => {\n          this.onUpdate(observer, result);\n        });\n      });\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.listeners.size) {\n      this.destroy();\n    }\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.observers.forEach(observer => {\n      observer.destroy();\n    });\n  }\n\n  setQueries(queries, notifyOptions) {\n    this.queries = queries;\n    notifyManager.batch(() => {\n      const prevObservers = this.observers;\n      const newObserverMatches = this.findMatchingObservers(this.queries); // set options for the new observers to notify of changes\n\n      newObserverMatches.forEach(match => match.observer.setOptions(match.defaultedQueryOptions, notifyOptions));\n      const newObservers = newObserverMatches.map(match => match.observer);\n      const newObserversMap = Object.fromEntries(newObservers.map(observer => [observer.options.queryHash, observer]));\n      const newResult = newObservers.map(observer => observer.getCurrentResult());\n      const hasIndexChange = newObservers.some((observer, index) => observer !== prevObservers[index]);\n\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return;\n      }\n\n      this.observers = newObservers;\n      this.observersMap = newObserversMap;\n      this.result = newResult;\n\n      if (!this.hasListeners()) {\n        return;\n      }\n\n      difference(prevObservers, newObservers).forEach(observer => {\n        observer.destroy();\n      });\n      difference(newObservers, prevObservers).forEach(observer => {\n        observer.subscribe(result => {\n          this.onUpdate(observer, result);\n        });\n      });\n      this.notify();\n    });\n  }\n\n  getCurrentResult() {\n    return this.result;\n  }\n\n  getQueries() {\n    return this.observers.map(observer => observer.getCurrentQuery());\n  }\n\n  getObservers() {\n    return this.observers;\n  }\n\n  getOptimisticResult(queries) {\n    return this.findMatchingObservers(queries).map(match => match.observer.getOptimisticResult(match.defaultedQueryOptions));\n  }\n\n  findMatchingObservers(queries) {\n    const prevObservers = this.observers;\n    const prevObserversMap = new Map(prevObservers.map(observer => [observer.options.queryHash, observer]));\n    const defaultedQueryOptions = queries.map(options => this.client.defaultQueryOptions(options));\n    const matchingObservers = defaultedQueryOptions.flatMap(defaultedOptions => {\n      const match = prevObserversMap.get(defaultedOptions.queryHash);\n\n      if (match != null) {\n        return [{\n          defaultedQueryOptions: defaultedOptions,\n          observer: match\n        }];\n      }\n\n      return [];\n    });\n    const matchedQueryHashes = new Set(matchingObservers.map(match => match.defaultedQueryOptions.queryHash));\n    const unmatchedQueries = defaultedQueryOptions.filter(defaultedOptions => !matchedQueryHashes.has(defaultedOptions.queryHash));\n    const matchingObserversSet = new Set(matchingObservers.map(match => match.observer));\n    const unmatchedObservers = prevObservers.filter(prevObserver => !matchingObserversSet.has(prevObserver));\n\n    const getObserver = options => {\n      const defaultedOptions = this.client.defaultQueryOptions(options);\n      const currentObserver = this.observersMap[defaultedOptions.queryHash];\n      return currentObserver != null ? currentObserver : new QueryObserver(this.client, defaultedOptions);\n    };\n\n    const newOrReusedObservers = unmatchedQueries.map((options, index) => {\n      if (options.keepPreviousData) {\n        // return previous data from one of the observers that no longer match\n        const previouslyUsedObserver = unmatchedObservers[index];\n\n        if (previouslyUsedObserver !== undefined) {\n          return {\n            defaultedQueryOptions: options,\n            observer: previouslyUsedObserver\n          };\n        }\n      }\n\n      return {\n        defaultedQueryOptions: options,\n        observer: getObserver(options)\n      };\n    });\n\n    const sortMatchesByOrderOfQueries = (a, b) => defaultedQueryOptions.indexOf(a.defaultedQueryOptions) - defaultedQueryOptions.indexOf(b.defaultedQueryOptions);\n\n    return matchingObservers.concat(newOrReusedObservers).sort(sortMatchesByOrderOfQueries);\n  }\n\n  onUpdate(observer, result) {\n    const index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  }\n\n  notify() {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(this.result);\n      });\n    });\n  }\n\n}\n\nexport { QueriesObserver };\n//# sourceMappingURL=queriesObserver.mjs.map\n","import { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\n\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\nexport { InfiniteQueryObserver };\n//# sourceMappingURL=infiniteQueryObserver.mjs.map\n","import { getDefaultState } from './mutation.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { shallowEqualObjects } from './utils.mjs';\n\n// CLASS\nclass MutationObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    var _this$currentMutation;\n\n    const prevOptions = this.options;\n    this.options = this.client.defaultMutationOptions(options);\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this\n      });\n    }\n\n    (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.setOptions(this.options);\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$currentMutation2;\n\n      (_this$currentMutation2 = this.currentMutation) == null ? void 0 : _this$currentMutation2.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    const isLoading = state.status === 'loading';\n    const result = { ...state,\n      isLoading,\n      isPending: isLoading,\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}\n\nexport { MutationObserver };\n//# sourceMappingURL=mutationObserver.mjs.map\n","// TYPES\n// FUNCTIONS\nfunction dehydrateMutation(mutation) {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state\n  };\n} // Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\n\n\nfunction dehydrateQuery(query) {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash\n  };\n}\n\nfunction defaultShouldDehydrateMutation(mutation) {\n  return mutation.state.isPaused;\n}\nfunction defaultShouldDehydrateQuery(query) {\n  return query.state.status === 'success';\n}\nfunction dehydrate(client, options = {}) {\n  const mutations = [];\n  const queries = [];\n\n  if (options.dehydrateMutations !== false) {\n    const shouldDehydrateMutation = options.shouldDehydrateMutation || defaultShouldDehydrateMutation;\n    client.getMutationCache().getAll().forEach(mutation => {\n      if (shouldDehydrateMutation(mutation)) {\n        mutations.push(dehydrateMutation(mutation));\n      }\n    });\n  }\n\n  if (options.dehydrateQueries !== false) {\n    const shouldDehydrateQuery = options.shouldDehydrateQuery || defaultShouldDehydrateQuery;\n    client.getQueryCache().getAll().forEach(query => {\n      if (shouldDehydrateQuery(query)) {\n        queries.push(dehydrateQuery(query));\n      }\n    });\n  }\n\n  return {\n    mutations,\n    queries\n  };\n}\nfunction hydrate(client, dehydratedState, options) {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return;\n  }\n\n  const mutationCache = client.getMutationCache();\n  const queryCache = client.getQueryCache(); // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n  const mutations = dehydratedState.mutations || []; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n  const queries = dehydratedState.queries || [];\n  mutations.forEach(dehydratedMutation => {\n    var _options$defaultOptio;\n\n    mutationCache.build(client, { ...(options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations),\n      mutationKey: dehydratedMutation.mutationKey\n    }, dehydratedMutation.state);\n  });\n  queries.forEach(({\n    queryKey,\n    state,\n    queryHash\n  }) => {\n    var _options$defaultOptio2;\n\n    const query = queryCache.get(queryHash); // Do not hydrate if an existing query exists with newer data\n\n    if (query) {\n      if (query.state.dataUpdatedAt < state.dataUpdatedAt) {\n        // omit fetchStatus from dehydrated state\n        // so that query stays in its current fetchStatus\n        const {\n          fetchStatus: _ignored,\n          ...dehydratedQueryState\n        } = state;\n        query.setState(dehydratedQueryState);\n      }\n\n      return;\n    } // Restore query\n\n\n    queryCache.build(client, { ...(options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries),\n      queryKey,\n      queryHash\n    }, // Reset fetch status to idle to avoid\n    // query being stuck in fetching state upon hydration\n    { ...state,\n      fetchStatus: 'idle'\n    });\n  });\n}\n\nexport { defaultShouldDehydrateMutation, defaultShouldDehydrateQuery, dehydrate, hydrate };\n//# sourceMappingURL=hydration.mjs.map\n","'use client';\nimport * as ReactDOM from 'react-dom';\n\nconst unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;\n\nexport { unstable_batchedUpdates };\n//# sourceMappingURL=reactBatchedUpdates.mjs.map\n","import { notifyManager } from '@tanstack/query-core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates.mjs';\n\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);\n//# sourceMappingURL=setBatchUpdatesFn.mjs.map\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexport { QueryClientProvider, defaultContext, useQueryClient };\n//# sourceMappingURL=QueryClientProvider.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic, willFetch } from './suspense.mjs';\n\nfunction useQueries({\n  queries,\n  context\n}) {\n  const queryClient = useQueryClient({\n    context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedQueries = React.useMemo(() => queries.map(options => {\n    const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure the results are already in fetching state before subscribing or updating options\n\n    defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic';\n    return defaultedOptions;\n  }), [queries, queryClient, isRestoring]);\n  defaultedQueries.forEach(query => {\n    ensureStaleTime(query);\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary);\n  });\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new QueriesObserver(queryClient, defaultedQueries));\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, {\n      listeners: false\n    });\n  }, [defaultedQueries, observer]);\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => shouldSuspend(defaultedQueries[index], result, isRestoring));\n  const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n    const options = defaultedQueries[index];\n    const queryObserver = observer.getObservers()[index];\n\n    if (options && queryObserver) {\n      if (shouldSuspend(options, result, isRestoring)) {\n        return fetchOptimistic(options, queryObserver, errorResetBoundary);\n      } else if (willFetch(result, isRestoring)) {\n        void fetchOptimistic(options, queryObserver, errorResetBoundary);\n      }\n    }\n\n    return [];\n  }) : [];\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises);\n  }\n\n  const observerQueries = observer.getQueries();\n  const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n    var _defaultedQueries$ind, _defaultedQueries$ind2;\n\n    return getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: (_defaultedQueries$ind = (_defaultedQueries$ind2 = defaultedQueries[index]) == null ? void 0 : _defaultedQueries$ind2.useErrorBoundary) != null ? _defaultedQueries$ind : false,\n      query: observerQueries[index]\n    });\n  });\n\n  if (firstSingleResultWhichShouldThrow != null && firstSingleResultWhichShouldThrow.error) {\n    throw firstSingleResultWhichShouldThrow.error;\n  }\n\n  return optimisticResult;\n}\n\nexport { useQueries };\n//# sourceMappingURL=useQueries.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","'use client';\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","import { QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useSuspenseQuery(options) {\n  return useBaseQuery({ ...options,\n    enabled: true,\n    useErrorBoundary: true,\n    suspense: true,\n    placeholderData: undefined,\n    networkMode: 'always',\n    onSuccess: undefined,\n    onError: undefined,\n    onSettled: undefined\n  }, QueryObserver);\n}\n\nexport { useSuspenseQuery };\n//# sourceMappingURL=useSuspenseQuery.mjs.map\n","import { useQueries } from './useQueries.mjs';\n\nfunction useSuspenseQueries({\n  queries,\n  context\n}) {\n  return useQueries({\n    queries: queries.map(query => ({ ...query,\n      enabled: true,\n      useErrorBoundary: true,\n      suspense: true,\n      placeholderData: undefined,\n      networkMode: 'always'\n    })),\n    context\n  });\n}\n\nexport { useSuspenseQueries };\n//# sourceMappingURL=useSuspenseQueries.mjs.map\n","function queryOptions(options) {\n  return options;\n}\n\nexport { queryOptions };\n//# sourceMappingURL=queryOptions.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { hydrate } from '@tanstack/query-core';\nimport { useQueryClient } from './QueryClientProvider.mjs';\n\nfunction useHydrate(state, options = {}) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const optionsRef = React.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React.useMemo(() => {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nconst Hydrate = ({\n  children,\n  options,\n  state\n}) => {\n  useHydrate(state, options);\n  return children;\n};\n\nexport { Hydrate, useHydrate };\n//# sourceMappingURL=Hydrate.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { parseFilterArgs, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\n\nfunction useIsFetching(arg1, arg2, arg3) {\n  const [filters, options = {}] = parseFilterArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const queryCache = queryClient.getQueryCache();\n  return useSyncExternalStore(React.useCallback(onStoreChange => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)), [queryCache]), () => queryClient.isFetching(filters), () => queryClient.isFetching(filters));\n}\n\nexport { useIsFetching };\n//# sourceMappingURL=useIsFetching.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { parseMutationFilterArgs, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\n\nfunction useIsMutating(arg1, arg2, arg3) {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const mutationCache = queryClient.getMutationCache();\n  return useSyncExternalStore(React.useCallback(onStoreChange => mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)), [mutationCache]), () => queryClient.isMutating(filters), () => queryClient.isMutating(filters));\n}\n\nexport { useIsMutating };\n//# sourceMappingURL=useIsMutating.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { parseMutationArgs, MutationObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { shouldThrowError } from './utils.mjs';\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const [observer] = React.useState(() => new MutationObserver(queryClient, options));\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = useSyncExternalStore(React.useCallback(onStoreChange => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = React.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && shouldThrowError(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\nexport { useMutation };\n//# sourceMappingURL=useMutation.mjs.map\n","'use client';\nimport { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n"],"names":["noop","getDefaultState","ReactDOM.unstable_batchedUpdates","require$$0","shimModule","useSyncExternalStore$1","React.createContext","React.useContext","React.useEffect","React.createElement","React.useState","React.useMemo","React.useCallback","React.useRef"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]}